apply plugin: 'com.android.application'
//apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'


static def releaseTime() {
    return new Date().format("yyyyMMdd")
}

// versionCode按时间自增
static def increasedVersionCode() {
    return Integer.valueOf(releaseTime())
}

android {
    compileSdkVersion 34
    buildToolsVersion '34'
    defaultConfig {
        applicationId "com.mxingo.driver"
        minSdkVersion 25
        targetSdkVersion 34
        versionCode increasedVersionCode()
        versionName "1.9.2"
        flavorDimensions "versionCode"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true

        manifestPlaceholders = [
                //从 3.1.2.0 版本开始，APPID 占位符从 GETUI_APP_ID 切换为 GETUI_APPID
                //后续所有产品的 APPID 均统一配置为 GETUI_APPID 占位符
                GETUI_APPID       : "rTBlL1Md7W54v0bap7jPp6",
        ]

        ndk {
            //设置支持的SO库架构
            abiFilters "armeabi-v7a",  "arm64-v8a"
        }

        //android studio 4.0 以上打包会出现这个问题
        lintOptions {
            checkReleaseBuilds false
            abortOnError false // 不在遇到错误时终止构建
            ignoreWarnings true // 忽略所有警告
        }

    }

    allprojects {
        gradle.projectsEvaluated {
            tasks.withType(JavaCompile) {
                options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
            }
        }
    }


    sourceSets {
        main {
            jniLibs.srcDir 'libs'
        }
    }
    signingConfigs {
        config {
            storeFile file(KEY_PATH)
            keyAlias ALIAS_NAME
            keyPassword ALIAS_PASS
            storePassword KEY_PASS
        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    buildTypes {
        debug {
            zipAlignEnabled true // Zipalign 优化
            debuggable true
            minifyEnabled false  //是否代码混淆
            signingConfig signingConfigs.config
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "${applicationId}_v${defaultConfig.versionName}_${releaseTime()}_debug.apk"
                }
            }

        }
        release {
            // 显示log
            buildConfigField("boolean", "LOG_DEBUG", "true")
            // Zipalign 优化
            zipAlignEnabled true
            debuggable false
            minifyEnabled true  //是否代码混淆
            signingConfig signingConfigs.config
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "${applicationId}_v${defaultConfig.versionName}_${releaseTime()}_release.apk"
                }
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'com.amap.api:3dmap:9.2.1'
    implementation 'com.amap.api:search:9.7.0'
    implementation files('libs/AMapTrack_1.5.0_AMapLocation_6.4.0_20230808.jar')
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation('androidx.test.espresso:espresso-core:3.2.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.22'
    implementation 'com.github.gzu-liyujiang.AndroidPicker:Common:4.1.6'
    implementation 'com.github.gzu-liyujiang.AndroidPicker:WheelPicker:4.1.6'
    implementation 'com.github.gzu-liyujiang.AndroidPicker:FilePicker:4.1.6'
    implementation 'com.qiniu:qiniu-android-sdk:7.5.0'
    implementation 'com.qiniu:happy-dns:0.2.13'
    implementation 'com.kaopiz:kprogresshud:1.1.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.10.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.vectordrawable:vectordrawable'
    implementation 'androidx.preference:preference:1.2.0'
    implementation 'com.jakewharton:butterknife:10.2.1'
    implementation 'com.squareup.okhttp3:okhttp:4.2.2'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.3.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.3.0'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup:otto:1.3.8'
    implementation 'org.greenrobot:eventbus:3.0.0'
    implementation 'com.google.dagger:dagger:2.28.3'
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    testImplementation 'junit:junit:4.12'
    testImplementation 'com.github.fabioCollini:DaggerMock:0.6.1'
    androidTestImplementation 'com.github.fabioCollini:DaggerMock:0.6.1'
    kapt 'com.github.bumptech.glide:compiler:4.9.0'
    kapt 'com.jakewharton:butterknife-compiler:10.2.1'
    kapt 'com.google.dagger:dagger-compiler:2.23.1'
    kapt 'androidx.annotation:annotation:1.6.0'
    implementation 'com.aliyun.dpa:oss-android-sdk:2.9.3'
    implementation 'net.grandcentrix.tray:tray:0.12.0'
    implementation 'org.conscrypt:conscrypt-openjdk-uber:1.1.3'


    implementation 'com.getui:gtsdk:3.3.7.0'  //个推SDK
    implementation 'com.getui:gtc:3.2.16.0'  //个推核心组件
}

